[include]
	path = ~/.config/git/private
[core]
	editor = nvim
	pager = less
	autocrlf = input
	excludesfile = ~/.config/git/ignore
[feature]
	manyFiles = true
[pager]
	branch = false
[sequence]
	editor = nvim
[branch]
	autosetupmerge = true
[log]
	date = short

[color]
	ui = true
[color "diff"]
	old = 9 reverse bold
	new = 10 reverse bold
	whitespace = 13 reverse bold
        meta = 15 bold
[color "branch"]
	current = 11 bold
[color "status"]
	branch = 11 bold
	nobranch = 11 bold
	added = green
	changed = red
	untracked = yellow

[alias]
	# brevity aliases
	st = status
	s = status -sb
	cm = commit
	cma = commit --all
	# stands for "fixup"
	fu = commit --amend --no-edit
	fua = commit --amend --no-edit --all
	pf = push --force-with-lease
	co = checkout
	df = diff --color-words
	dc = diff --color-words --cached
	br = branch
	brv = branch -vv
	ftpa = fetch --all --prune
	rb = rebase
	rbi = rebase -i
	# run rebase --interactive without an editor, useful for autosquash
	asq = "!GIT_SEQUENCE_EDITOR=: git rebase --interactive --autosquash \"$@\""
	rp = rev-parse
	rph = rev-parse HEAD
	root = rev-parse --show-toplevel
	new = "!git init && git commit --allow-empty -m 'init' -e"

	# prints logs in a particular, brief format (see below)
	l = log --pretty=twoline
	lg = log --pretty=twoline --graph --branches --tags
	la = log --pretty=twoline --graph --all
	# m stands for "medium"
	lm = log --pretty=medium --stat --date=local

	# this command prints logs for all commits whose sha1 starts with a given argument, eg
	# git abbr ad
	# might print out the commits ad331c9 and ad4603d
	# it's useful for finding hash collisions in big projects
	# we recycle the lg alias above as the logging style
        abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager lg -n1 $commit; done' -"

	# rewrite a tag's message without bumping its date
	tag-amend = "!GIT_COMMITTER_DATE=\"$(git log -1 --format=%ai $1)\" git tag -af \"$2\" \"$2\""
[pretty]
	# twoline looks like this:
	#  * abcdefg [name @ date] (HEAD)
	#            commit message title
	# the square brackets are designed to match my bash profile (the refs are wrapped in parentheses, can't be changed)
	# the hash is in bright red, the name is green, the date is teal, the refs are brown
	# the colors were chosen specifically to avoid blurring into my bash prompt lol
	twoline = tformat:%C(9 bold)%h%Creset [%C(green)%an%Creset @ %C(cyan)%ad%Creset]%C(yellow)%d%Creset%n        %s

	# similar to the above, but title in the middle instead of on second line
	# also it's "format" instead of "tformat" to prevent excess newlines
	onetwoline = format:%C(9 bold)%h%Creset %s [%C(green)%an%Creset @ %C(cyan)%ad%Creset]%C(yellow)%d%Creset

[columns]
	ui = auto
[stash]
	showPatch = true
[fetch]
	prune = true
[push]
	default = upstream
	recurseSubmodules = check
[pager]
	stash = false
[rerere]
	enabled = true
[rebase]
	autosquash = true
