# dependencies:
# - ruby 2.3 (for Hash#dig to consume JSON from bspc query -T)
# - maim and slop (for screenshots)
# - st, firefox, i3lock, rofi
# - ponymix (implies pulseaudio)

# lock the screen
super + Escape
  i3lock -i ~/.config/sxhkd/i3lock.png
# exit x
super + ctrl + Escape
  bspc quit

# close or kill the focused window
# grave is the keysym name for backtick
super + {_,shift+} grave
  bspc node focused -{c,k}

# switch window between float and tile
# note, if the window was spawned in a floating state, its lastState
# will also be floating (can be confirmed with query -T), therefore
# node -t ~floating will not work
# we have to manually check in case both the current and last states
# are the same, and toggle accordingly
super + s
  cur=$(bspc query -T -n focused | ruby -rjson -e 'puts JSON.parse(STDIN.read).dig("client", "state")') ; \
  if [[ "${cur}" == 'tiled' ]] ; then bspc node -t floating ; else bspc node -t tiled ; fi

# cycle desktop between standard tiled behavior and monocle layout
super + a
  bspc desktop focused -l next

# cycle focus through older/newer windows
# useful for desktops in monocle, or using floating
super + {d,f}
  bspc node {next,prev}.local -f

# super+dir to move focus in that direction
# super+shift+dir to swap with the window in that direction
super + {_,shift+} {h,j,k,l}
  bspc node focused -{f,s} {west,south,north,east}

# super+ctrl+dir to set preselect in that direction (the next new window will be opened there)
# if you repeat the combination in the currently preselected direction, it will be canceled
super + ctrl + {h,j,k,l}
  bspc node focused -p \~{west,south,north,east}

# super+alt+dir to expand that edge
# super+shift+alt+dir to shrink the opposite edge
# eg super+alt+l expands the right edge, so you expect super+alt+shift+h to shrink it
super + alt + {h,j,k,l}
  bspc node {@west -r -64,@south -r +64,@north -r -64,@east -r +64}
super + alt + shift + {h,j,k,l}
  bspc node {@east -r -64,@north -r +64,@south -r -64,@west -r +64}

# rofi keybinds
super + Tab
  rofi -show window
super + q
  rofi -show run
super + w
  rofi -show pass

# screenshot bindings
# TODO: use notify-send to signal the creation of the screenshot,
# clicking the notification should show it in sxiv
# screenshot the focused window
super + Print
  maim -i $(bspc query -n focused -T | ruby -rjson -e 'puts JSON.parse(STDIN.read).dig("id")') ~/"maim-$(date +%F-%T).png"
# screenshot a region with slop
# have to trigger on release of the key, otherwise the release event causes slop to cancel itself
super + shift + @Print
  maim -s ~/"maim-$(date +%F-%T).png"

# bindings for the terminal desktop
super + z
  ~/.config/sxhkd/open-or-switch T st
super + shift + z
  ~/.config/sxhkd/send-to-desktop T
super + ctrl + z
  st

# bindings for the browser desktop
super + x
  ~/.config/sxhkd/open-or-switch W firefox
super + shift + x
  ~/.config/sxhkd/send-to-desktop W
super + ctrl + x
  firefox

# bindings for the emacs desktop
super + c
  ~/.config/sxhkd/open-or-switch E emacsclient -ca=
super + shift + c
  ~/.config/sxhkd/send-to-desktop E
super + ctrl + c
  emacsclient -ca=

# bindings for the misc desktop
super + v
  ~/.config/sxhkd/open-or-switch M
super + shift + v
  ~/.config/sxhkd/send-to-desktop M

# media keys
XF86Audio{Lower,Raise}Volume
  ponymix {decrease,increase} 4
XF86AudioMute
  ponymix --output toggle
ctrl + XF86AudioMute
  ponymix --input toggle
